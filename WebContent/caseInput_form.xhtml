<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:h="http://xmlns.jcp.org/jsf/html"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
    xmlns:f="http://java.sun.com/jsf/core"
    >


<h:head>
	<title>Adaptive Radiology Interpretation / Education System
		(ARIES)</title>
	<link href="./css/skel-noscript.css" rel="stylesheet" type="text/css" />
	<link href="./resources/css/bootstrap.min.css" rel="stylesheet" />
	<link href="./resources/css/bootstrap-theme.min.css" rel="stylesheet" />
	<link href="./css/newStyle.css" rel="stylesheet" type="text/css" />
	
	<script type="text/javascript"
		src="//ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
	<script type="text/javascript" src="./js/collapseTable.js"></script>
	<script type="text/javascript" src="./js/skel.min.js"></script>
	<script type="text/javascript" src="./js/skel-panels.min.js"></script>
	<script type="text/javascript" src="./js/highcharts.js"></script>
	<script type="text/javascript" src="./js/themes/dark-unica.js"></script>
	<script type="text/javascript" src="./js/modules/data.js"></script>
	
	<script type="text/javascript">
	    function onLoadCursor() {
       	  document.body.style.cursor='default';	
       	  
       	  document.getElementById("menu_clinical")).className = "active";
          document.getElementById("menu_submit")).className = "inactive";
          document.getElementById("menu_research")).className = "inactive";
          document.getElementById("menu_education")).className = "inactive";
          document.getElementById("menu_qc")).className = "inactive";
       	  
	    }
	</script>
	
	<script type="text/javascript">
	    function onWaitCursor() {
       	  document.body.style.cursor='wait';	
	    }
	</script>

</h:head>
<h:body onload="onLoadCursor();">

<ui:include src="header.xhtml" />   
<h:form id="caseInput">

<div class="container-fluid">

	<!--  Load in the selected network -->      
	<h:inputHidden value="#{serverModel.prePageLoad}" />
	
	<div class="row form-row">
	    <div class="col-xs-2">
	        <h4>Network</h4>
	     </div>
	     <div class="col-xs-10">
	       <div class="input-group">
	           <h:selectOneMenu id="network" value="#{serverModel.activeNetwork}" class="registration" 
	               onchange="this.form.submit()" valueChangeListener="#{serverModel.caseChangeNetwork}"  reRender="diagnosis" >
                   <f:selectItems value="#{serverModel.availableNetworks}"></f:selectItems> 
               </h:selectOneMenu>
                  
               <h:inputHidden value="#{serverModel.casePrePageLoad}" />
           </div> 
	    </div>
	</div>
	
	<div></div>
	
	<div class="row form-row">
		<div class="col-xs-2">
		   <h4>Organization</h4>
	    </div>
        <div class="col-xs-10">
	        <div class="input-group">
	            <h:selectOneMenu value="#{serverModel.organization}" class="registration"> 
	                <f:selectItem itemLabel="-select-"></f:selectItem>
	                <f:selectItem itemValue="CHOP" itemLabel="CHOP"></f:selectItem>
	                <f:selectItem itemValue="UPHS" itemLabel="UPHS"></f:selectItem>
	            </h:selectOneMenu>
	        </div>
        </div>
	</div>

    <div></div>
    
    <div class="row form-row">
       <div class="col-xs-2">
          <h4>Accession</h4>
       </div>
       <div class="col-xs-10">
           <div class="input-group">
               <h:inputText id="accession" value="#{serverModel.accession}"
                            onblur="return validate()" class="form-control" />
           </div>
           <div id="error" style="color: red;"></div>
       </div>
    </div>
    
    <div></div>
    
    <div class="row form-row">
	    <div class="col-xs-2">
	        <h4>MR Number (Last 5)</h4>
	    </div>
	    <div class="col-xs-10">
	        <div class="input-group">
	            <h:inputText id="mrNum" value="#{serverModel.patientId}" onblur="return checkMrNum()"
	                         maxlength="5" class="form-control"></h:inputText>
	        </div>
	        <div id="number_error" style="color: red"></div>
	    </div>
    </div>

    <div></div>

    <div class="row form-row">
	    <div class="col-xs-2">
	        <h4>Patient Age</h4>
	    </div>
	    <div class="col-xs-10">
	        <div class="input-group">
	            <h:inputText id="age" value="#{serverModel.age}" class="form-control" maxlength="3" onblur="return checkAge()"/>
	        </div>
	        <div id="age_error" style="color: red"></div>
	    </div>
    </div>

    <div></div>

    <div class="row form-row">
	    <div class="col-xs-2">
	        <h4>Gender</h4>
	    </div>
	    <div class="col-xs-10">
	        <div class="input-group">
	            <h:selectOneRadio id="gender" value="#{serverModel.gender}">
	                <f:selectItem itemValue="Female" itemLabel="Female"></f:selectItem>
	                <f:selectItem itemValue="Male" itemLabel="Male"></f:selectItem>
	            </h:selectOneRadio>
	
	        </div>
	    </div>
    </div>

    <div></div>

    <div class="row form-row">
	    <div class="col-xs-2">
	        <h4>Supporting Data</h4>
	    </div>
	    <div class="col-xs-10">
	        <div class="input-group">
	            <h:selectManyCheckbox id="supportData"
	                value="#{serverModel.supportingDataList}">
	                <f:selectItem itemValue="Pathology" itemLabel="Pathology"></f:selectItem>
	                <f:selectItem itemValue="Laboratory" itemLabel="Laboratory"></f:selectItem>
	                <f:selectItem itemValue="Clinical History"
	                    itemLabel="Clinical History"></f:selectItem>
	                <f:selectItem itemValue="Imaging Findings"
	                    itemLabel="Imaging Findings"></f:selectItem>
	            </h:selectManyCheckbox>
	        </div>
	    </div>
    </div>
    
    <div></div>

    <div class="row form-row">
	    <div class="col-xs-2">
	        <h4>Supporting Data Details</h4>
	    </div>
	    <div class="col-xs-10">
	        <div class="input-group">
	            <h:inputTextarea class="form-control" value="#{serverModel.description}" cols="75" rows="5"></h:inputTextarea>
	        </div>
	    </div>
    </div>

    <div></div>

    <div class="row form-row">
	    <div class="col-xs-2">
	        <h4>Correct Diagnosis</h4>
	    </div>
	    <div class="col-xs-10"> 
	        <div class="input-group">
	            <h:selectOneMenu id="diagnosis"
	                class="registration"
	                value="#{serverModel.correctDx}"
	                onchange='this.form.submit()'  valueChangeListener="#{serverModel.getCorrectDxAction}"> 
	                <f:selectItem itemLabel="-select-"></f:selectItem>
	                <f:selectItem itemValue="Other" itemLabel="Other"></f:selectItem>
	                <f:selectItems value="#{serverModel.diseaseTitles}"></f:selectItems>
	            </h:selectOneMenu>
	        </div>
	    </div>
    </div>

    <div></div>

    <div class="row form-row">
	    <div class="col-xs-2"></div>
	    <div class="col-xs-10">
	        <div class="input-group" > 
	            <h:inputText class="form-control" value="#{serverModel.correctDxText}" disabled="#{serverModel.knownDx}"/>
	        </div>
	    </div> 
    </div>

    <hr />
    
    <!-- Begin Rows of features/nodes to set -->                                        
    <div class="row row2"><div class="col-xs-12"><div class="selectdiv">
            <ui:repeat var="networkPrefix" id="networkPrefixID" value="#{serverModel.networkPrefixList}">
            
                <h:panelGrid rendered="#{serverModel.getNetworkNodeSize(networkPrefix)}">
                    <h:outputText value="#{serverModel.getNetworkPrefixName(networkPrefix)}" class="category" />
                        
                    <ui:repeat var="feature" id="networkFeatureID" 
                        value="#{serverModel.getSelectMenuFeatures(networkPrefix)}">
    
                        <h:outputText value="#{serverModel.currentFeature(feature)}" />
                        
                        <h:selectOneMenu id="sensitivity" 
                            class="features ${serverModel.featureClass(feature)}" 
                            value="#{serverModel.nodeInput}" onchange="this.form.submit()" >
                            <f:selectItems value="#{serverModel.selectMenuInputs(feature)}" />
                        </h:selectOneMenu>
                                
                    </ui:repeat>
                </h:panelGrid>
    
            </ui:repeat>
    </div></div></div>
    
    <hr />
    
    <div class="row form-row">
        <div class="col-xs-4"></div>
        <div class="col-xs-2"> 
            <h:commandButton id="submit_btn" class="btn btn-block btn-register"
                             value="Case Submit" action="#{serverModel.save}"
                             reRender="accession,organization,network,mrNum,description,modality,diagnosis" />
        </div> 
        <div class="col-xs-2"> 
            <h:commandButton id="reset" value="Reset"
                             class="btn btn-block btn-register" action="#{serverModel.clear}"
                             reRender="accession,organization,network,mrNum,description,modality,diagnosis" />
        </div>
        <div class="col-xs-4"></div>
    </div>
    
    
    </div>

	</h:form>
	
   <script type="text/javascript">
     
       function validate() {

           var flag = 0;
           document.getElementById("error").innerText =  "";
           document.getElementById("error").textContent= "";
           var userName = document.getElementById("caseInput:accession").value;

           if (/[^0-9a-zA-Z\s]/gi.test(userName)) {

               document.getElementById("error").innerText ="Only Alphanumeric Characters are allowed";
               document.getElementById("error").textContent= "Only Alphanumeric Characters are allowed";
               return true;
           } else
               return false;

       }
       
       //showhide();
       
        function showhide() {
               var e = document.getElementById("feature_pg");
               var er = document.getElementById("formDiv");
              
               var flag = document.getElementById("caseInput:dpFlag").value;
               
               if(flag == 'false') {               
               e.style.display = 'none';
               er.style.display =  'block';}
               else{
                    e.style.display =  'block';
                    er.style.display = 'none'
               er.readOnly = true;}
            }
        
        showText();
        function showText()
        {  
           
            var correctDx = document.getElementById("caseInput:diagnosis").value;
            if(correctDx == 'Other')
               document.getElementById('inputTex').style.display='block';
            else
               document.getElementById('inputTex').style.display='none'; 
        }
        checkAge();
        function checkAge()
          {
           document.getElementById("age_error").innerText = "";
           document.getElementById("age_error").textContent = "";
           var age = document.getElementById("caseInput:age").value;
           if (isNaN(age)) {
               document.getElementById("age_error").innerText = "Only Numbers are allowed";
               document.getElementById("age_error").textContent = "Only Numbers are allowed";
               return true;
           }
           else if ( (age > 150) || ( 0 > age) ) {
               document.getElementById("age_error").innerText = "Numbers(0-150) are allowed";
               document.getElementById("age_error").textContent = "Numbers(0-150) are allowed";
               return true;
           }
   
           return false;
           
          }
        
        checkMrNum();
        function checkMrNum()
         {
           document.getElementById("number_error").innterText = "";
           document.getElementById("number_error").textContent = "";
           var mrnum = document.getElementById("caseInput:mrNum").value;
           
           if ( isNaN(mrnum) ) {
               document.getElementById("number_error").innterText = "Only numbers are allowed";
               document.getElementById("number_error").textContent = "Only numbers are allowed";
               return true;
           }
           else if ( 10000 > mrnum )  {
               document.getElementById("number_error").innerText = "Only 5 digit numbers are allowed";
               document.getElementById("number_error").textContent = "Only 5 digit numbers are allowed";
               return true;
           }
           
           return false;
         }
        
        function showQCWindow()
        {
            window.open('./qualityControl.jsf','mywindow', 'resizable=no,toolbar=no,scrollbars=yes,height=450,width=530,top=145,left=235');
            return true;
           
        }
           
   </script>
	
	
	

</h:body>

</html>