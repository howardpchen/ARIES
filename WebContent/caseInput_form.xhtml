<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core">



<h:head>
	<title>Adaptive Radiology Interpretation / Education System
		(ARIES)</title>

	<meta http-equiv="X-UA-Compatible" content="IE=edge" />
	<meta name="viewport" content="width=device-width, initial-scale=1" />

	<!-- Bootstrap -->
	<link href="./resources/css/bootstrap.min.css" rel="stylesheet" />
	<link href="./resources/css/bootstrap-theme.min.css" rel="stylesheet" />
	<link href="./css/teststyle.css" rel="stylesheet" type="text/css" />
	<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
	<script
		src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
	<!-- Include all compiled plugins (below), or include individual files as needed -->
	<script src="./resources/js/bootstrap.min.js"></script>
	<!-- 	<style>
a {
	text-decoration: underline;
}

input[type=checkbox], input[type=radio] {
	margin-right: 1px;
	margin-left: 1px;
}

.nav-tabs {
    border-bottom: 0px solid #ddd;
}
</style>
-->

</h:head>
<h:body id="bodyStyle">
    <ui:include src="header.xhtml" />  
	<f:view>
		<h:form role="form" id="caseInput">
			
			<!-- 			
			    <div class="row">
				<div class="col-xs-3"></div>
				<div class="col-xs-6">
				    <h:outputText id="errorMsg" value="#{serverModel.errorMsg}" escape="false"></h:outputText>
					<h:messages globalOnly="true" style="color:red;font-weight:bold;"></h:messages>
				</div>
				<div class="col-xs-3"></div>
			</div>
			-->
			
			<div class="container-fluid">
			
				<div class="row">
					<div class="col-xs-2"></div>
					<div class="col-xs-8">
						<div class="panel panel-primary">
							<div class="panel-body">
 
 								<fieldset id="formDiv">
 								<div class="row form-row">
									<div class="form-group">
										<div class="col-xs-4">
											<label for="network">Network</label>
										</div>
										<div class="col-xs-8">
											<div class="input-group">
												<h:selectOneMenu id="network" value="#{serverModel.activeNetwork}" class="registration"
												  onchange="this.form.submit()" valueChangeListener="#{serverModel.caseChangeNetwork}"  reRender="diagnosis" >
													<f:selectItems value="#{serverModel.availableNetworks}"></f:selectItems> 
												</h:selectOneMenu> 
		                                    <h:inputHidden value="#{serverModel.casePrePageLoad}" />
											</div> 
										</div>
									</div>
								</div>

                                <div class="row form-row">
									<div class="form-group">
										<div class="col-xs-4">
											<label for="organization">Organization</label>
										</div>
										<div class="col-xs-8">
											<div class="input-group">
												<h:selectOneMenu value="#{serverModel.organization}" class="registration"> 
													<f:selectItem itemLabel="-select-"></f:selectItem>
													<f:selectItem itemValue="CHOP" itemLabel="CHOP"></f:selectItem>
													<f:selectItem itemValue="UPHS" itemLabel="UPHS"></f:selectItem>
												</h:selectOneMenu>
		
											</div>
										</div>
									</div>
								</div>
								
								<div class="row form-row">
									<div class="form-group">
										<div class="col-xs-4">
												<label for="modality">Modality</label>
										</div>
										<div class="col-xs-8">
											<div class="input-group">
												<h:selectOneMenu id="modality" value="#{serverModel.modality}" class="registration">
													<f:selectItem itemLabel="-select-"></f:selectItem>
													<f:selectItem itemValue="MR" itemLabel="MR"></f:selectItem>
													<f:selectItem itemValue="XR" itemLabel="XR"></f:selectItem>
													<f:selectItem itemValue="CT" itemLabel="CT"></f:selectItem>
												</h:selectOneMenu>
		
											</div>
										</div>
									</div>
								</div>
								
								<div class="row form-row">
									<div class="form-group">
										<div class="col-xs-4">
											<label for="accession">Accession</label>
										</div>
										<div class="col-xs-8">
											<div class="input-group">
		
												<h:inputText id="accession" value="#{serverModel.accession}"
													onblur="return validate()" class="form-control" />
		
											</div>
											<div id="error" style="color: red"></div>
										</div>
									</div>
								</div>
								
                                <div class="row form-row">
									<div class="form-group">
										<div class="col-xs-4">
											<label for="mrNum">MR Number (Last 5)</label>
										</div>
										<div class="col-xs-8">
											<div class="input-group">
												<h:inputText id="mrNum" value="#{serverModel.patientId}" onblur="return checkMrNum()"
													maxlength="5" class="form-control"></h:inputText>
											</div>
											<div id="number_error" style="color: red"></div>
										</div>
									</div>
								</div>
								
								<div class="row form-row">
									<div class="form-group">
										<div class="col-xs-4">
											<label for="age">Patient Age</label>
										</div>
										<div class="col-xs-8">
											<div class="input-group">
												<h:inputText id="age" value="#{serverModel.age}" class="form-control" maxlength="3" onblur="return checkAge()"/>
											</div>
											<div id="age_error" style="color: red"></div>
										</div>
										
									</div>
								</div>

                                <div class="row form-row">
									<div class="form-group">
										<div class="col-xs-4">
											<label for="gender">Gender</label>
										</div>
										<div class="col-xs-8">
											<div class="input-group">
												<h:selectOneRadio id="gender" value="#{serverModel.gender}">
													<f:selectItem itemValue="Female" itemLabel="Female"></f:selectItem>
													<f:selectItem itemValue="Male" itemLabel="Male"></f:selectItem>
												</h:selectOneRadio>
		
											</div>
										</div>
									</div>
								</div>
								
								<div class="row form-row">
									<div class="form-group">
										<div class="col-xs-4">
											<label for="supportData">Supporting Data</label>
										</div>
										<div class="col-xs-8">
											<div class="input-group">
												<h:selectManyCheckbox id="supportData"
													value="#{serverModel.supportingDataList}">
													<f:selectItem itemValue="Pathology" itemLabel="Pathology"></f:selectItem>
													<f:selectItem itemValue="Laboratory" itemLabel="Laboratory"></f:selectItem>
													<f:selectItem itemValue="Clinical history"
														itemLabel="Clinical history"></f:selectItem>
													<f:selectItem itemValue="Imaging findings"
														itemLabel="Imaging findings"></f:selectItem>
		
												</h:selectManyCheckbox>
		
											</div>
										</div>
									</div>
								</div>
								
								<div class="row form-row">
									<div class="form-group">
										<div class="col-xs-4">
											<label for="description">Supporting data details</label>
										</div>
										<div class="col-xs-8">
											<div class="input-group">
												<h:inputTextarea class="form-control" value="#{serverModel.description}" cols="75" rows="5"></h:inputTextarea>
											</div>
	                                    </div>
									</div>
								</div>

                                <div class="row form-row">
									<div class="form-group">
										<div class="col-xs-4">
											<label for="diagnosis">Correct Diagnosis</label>
										</div>
										<div class="col-xs-8">	
											<div class="input-group">
												<h:selectOneMenu id="diagnosis"
												    class="registration"
													value="#{serverModel.correctDx}"
													onchange='this.form.submit()'  valueChangeListener="#{serverModel.getCorrectDxAction}"> 
													<f:selectItem itemLabel="-select-"></f:selectItem>
													<f:selectItem itemValue="Other" itemLabel="Other"></f:selectItem>
													<f:selectItems value="#{serverModel.diseaseTitles}"></f:selectItems>
												</h:selectOneMenu>
											</div>
										</div>
									</div>
								</div>
							
							    <div class="row form-row">
								<div class="form-group">
										<div class="col-xs-4"></div>
										<div class="col-xs-8">
											<div class="input-group" > 
												<h:inputText class="form-control" value="#{serverModel.correctDxText}" disabled="#{serverModel.knownDx}"/>
											</div>
										</div> 
									</div>
								</div>
									
								<!-- 
								<div class="row form-row">
									<div class="form-group">
										<div class="col-xs-4">
											<label for="qcperson">QC Person</label>
										</div>
										<div class="col-xs-8">
											<div class="input-group">
												<h:selectOneMenu id="qcperson" class="registration"
													value="#{serverModel.qcperson}"> 
													<f:selectItems value="#{serverModel.usersList}"></f:selectItems>
												</h:selectOneMenu>
											</div>
										</div>
									</div>
								</div>
								-->

                                <hr />
                                
                                <!-- Begin Rows of features/nodes to set -->                                        
								<div class="row row2"><div class="col-xs-12"><div class="selectdiv">
								        <ui:repeat var="networkPrefix" id="networkPrefixID" value="#{serverModel.networkPrefixList}">
								        
								            <h:panelGrid rendered="#{serverModel.getNetworkNodeSize(networkPrefix)}">
								                <h:outputText value="#{serverModel.getNetworkPrefixName(networkPrefix)}" class="category" />
								                    
								                <ui:repeat var="feature" id="networkFeatureID" 
								                    value="#{serverModel.getSelectMenuFeatures(networkPrefix)}">
								
								                    <h:outputText value="#{serverModel.currentFeature(feature)}" />
								                    
								                    <h:selectOneMenu id="sensitivity" 
								                        class="features ${serverModel.featureClass(feature)}" 
								                        value="#{serverModel.nodeInput}" onchange="this.form.submit()" >
								                        <f:selectItems value="#{serverModel.selectMenuInputs(feature)}" />
								                    </h:selectOneMenu>
															
								                </ui:repeat>
								            </h:panelGrid>
								
								        </ui:repeat>
								</div></div></div>
								
								<hr />
                                
                                <div class="row">
									<div class="form-group">
										<div class="col-xs-4"></div>
	
										<div class="col-xs-2"> 
											<h:commandButton id="submit_btn" class="btn btn-block btn-register"
												value="Case Submit" action="#{serverModel.save}"
												reRender="accession,organization,network,mrNum,description,modality,diagnosis" />
										</div> 
										<div class="col-xs-2"> 
											<h:commandButton id="reset" value="Reset"
												class="btn btn-block btn-register" action="#{serverModel.clear}"
												reRender="accession,organization,network,mrNum,description,modality,diagnosis" />
										</div>
										<div class="col-xs-4"></div>
									</div>
								</div>
								<div class="row">
								    <div class="col-xs-4"></div>
								    <div class="col-xs-4">
                                        <h:messages globalOnly="true" style="color:red;font-weight:bold;" value="messages" ></h:messages>
								    </div>
								    <div class="col-xs-4"></div>
								</div>
								</fieldset> 

							</div> 
						</div>   
					</div>
					<div class="col-xs-2"></div>
				</div>
			</div>
			<h:inputHidden value="#{serverModel.postPageLoad}" />
			<h:inputHidden id="dpFlag" value="#{serverModel.featureFlag}"></h:inputHidden>
          </h:form>  
          
 
	</f:view>
	<script type="text/javascript">
	  
		function validate() {

			var flag = 0;
			document.getElementById("error").innerText =  "";
			document.getElementById("error").textContent= "";
			var userName = document.getElementById("caseInput:accession").value;

			if (/[^0-9a-zA-Z\s]/gi.test(userName)) {

				document.getElementById("error").innerText ="Only Alphanumeric Characters are allowed";
				document.getElementById("error").textContent= "Only Alphanumeric Characters are allowed";
				return true;
			} else
				return false;

		}
		
		//showhide();
		
		 function showhide() {
			    var e = document.getElementById("feature_pg");
			    var er = document.getElementById("formDiv");
			   
			    var flag = document.getElementById("caseInput:dpFlag").value;
			    
			    if(flag == 'false')	{		    	
			    e.style.display = 'none';
			    er.style.display =	'block';}
			    else{
			    	 e.style.display =	'block';
			    	 er.style.display = 'none'
			    er.readOnly = true;}
			 }
		 
		 showText();
		 function showText()
		 {  
			
			 var correctDx = document.getElementById("caseInput:diagnosis").value;
		     if(correctDx == 'Other')
		        document.getElementById('inputTex').style.display='block';
		     else
		        document.getElementById('inputTex').style.display='none'; 
		 }
		 checkAge();
		 function checkAge()
		   {
			document.getElementById("age_error").innerText = "";
		    document.getElementById("age_error").textContent = "";
			var age = document.getElementById("caseInput:age").value;
			if (isNaN(age)) {
				document.getElementById("age_error").innerText = "Only Numbers are allowed";
			    document.getElementById("age_error").textContent = "Only Numbers are allowed";
			    return true;
			}
			else if ( (age > 150) || ( 0 > age) ) {
				document.getElementById("age_error").innerText = "Numbers(0-150) are allowed";
				document.getElementById("age_error").textContent = "Numbers(0-150) are allowed";
				return true;
			}
	
			return false;
			
		   }
		 
		 checkMrNum();
		 function checkMrNum()
		  {
		    document.getElementById("number_error").innterText = "";
		    document.getElementById("number_error").textContent = "";
		    var mrnum = document.getElementById("caseInput:mrNum").value;
		    
		    if ( isNaN(mrnum) ) {
		    	document.getElementById("number_error").innterText = "Only numbers are allowed";
		    	document.getElementById("number_error").textContent = "Only numbers are allowed";
		    	return true;
		    }
		    else if ( 10000 > mrnum )  {
		    	document.getElementById("number_error").innerText = "Only 5 digit numbers are allowed";
		    	document.getElementById("number_error").textContent = "Only 5 digit numbers are allowed";
		    	return true;
		    }
		    
		    return false;
		  }
		 
		 function showQCWindow()
		 {
		     window.open('./qualityControl.jsf','mywindow', 'resizable=no,toolbar=no,scrollbars=yes,height=450,width=530,top=145,left=235');
		     return true;
		    
		 }
		    
	</script>

</h:body>

</html>